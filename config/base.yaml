experiments:
  # Base configuration – used as template for all experiments
  base: &base_template
    general: &general_base
      data_path: "demo/raw"
      artefacts_path: "demo/artefacts"
      processed_path: "demo/processed"
      max_retries: 3
      num_workers: 4
      supported_extensions: ["jpg", "jpeg", "png"]

    planner: &planner_base
      enable: true #enable IQA for detecting degradations
      optimize_pipeline: true #enable exhaustive pipeline order search
      IQA: 
        model: depictqa #model for degradation and severity detection
        severity: ["very low", "low", "medium", "high", "very high"]
        severity_threshold: ["medium", "high", "very high"] #only select degradation of severity greater than or equal to medium
        degradations: [
          "motion blur", "defocus blur", "rain",
          "haze", "dark", "noise", "jpeg compression artifact"
        ]
        max_degradations: 3
      batch_by_degradation: true #batch by degradation type
      score: 
        type : "restoration_score" # lambda * cos_sim + (1-lambda) * qalign_score
        lambda: 0.5
        distance_metric: "cos_sim"

    executor: &executor_base
      enable: true 
      batch: false
      preprocess: 
        use_api: true
        name: "qwen-image-edit"
        include_severity: true #if false then it does not include severity in the prompt
        #the following are default values if use_api is false
        hf_name: "Qwen/Qwen-Image-Edit"
        default_size: (1664, 928)
        device_map: "balanced"
        inference_steps: 20
        true_cfg_scale: 9.0

    verifier: &verifier_base
      enable: true
# Exp 1 – Varying λ during pipeline optimisation
  lambda_0:
    general: *general_base
    planner:
      <<: *planner_base
      lambda: 0
    executor: *executor_base
    verifier: *verifier_base

  lambda_0_3:
    general: *general_base
    planner:
      <<: *planner_base
      lambda: 0.3
    executor: *executor_base
    verifier: *verifier_base

  lambda_0_5:
    <<: *base_template           

  lambda_0_7:
    general: *general_base
    planner:
      <<: *planner_base
      lambda: 0.7
    executor: *executor_base
    verifier: *verifier_base

# Exp 2 – Pipeline variants
  random_planning:
    general: *general_base
    planner:
      <<: *planner_base
      enable: false
      optimize_pipeline: false   # Disable planning
    executor: *executor_base
    verifier: *verifier_base

  planned_no_optimisation:
    general: *general_base
    planner:
      <<: *planner_base
      enable: true
      optimize_pipeline: false   # Use detected order, no search
    executor: *executor_base
    verifier: *verifier_base

  planned_opt_no_verify:
    general:
      <<: *general_base
      max_retries: 1             # Single pass
    planner: *planner_base
    executor: *executor_base
    verifier:
      enable: false              # Skip verification

  planned_opt_with_verify:
    <<: *base_template
